name: caraya-tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - ci-github-actions

env: 
  LABVIEW_VERSION: 24.0
  LABVIEW_BITNESS: 64
  DOCKER_USER: "runner"

jobs:

  caraya-tests:

    runs-on:
      - ubuntu-latest

    container:
      image: "ghcr.io/vipm-io/actions-runner-labview:main"
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.github_token }}
      
    steps:
      - uses: actions/checkout@v4    
      
      - name: Caraya Tests
        shell: bash
        run: |
          echo "Applying VIPC Starting Display..."
          source /usr/bin/start_display
          echo "Refreshing Package List..."
          dragon refresh --vipm          
          echo "Applying VIPC file..."
          dragon vipm apply-vipc --labview-version ${{ env.LABVIEW_VERSION }} --labview-bitness ${{ env.LABVIEW_BITNESS }} --timeout 600 ./source/.vipc
          if [ -f "./Tooling/coverage.vi" ]; then
            echo "Calculating Test Coverage..."
            g-cli --timeout 600000 "./Tooling/coverage.vi"
          fi
          echo "Running unit tests..."
          g-cli --timeout 600000 Caraya -- -s "tests" -x "report.xml" -v true -r true
          
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: caraya-test-report
          path: |
            ./report.xml
            ./codecov.json

      - name: Caraya Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          check_name: Caraya Test Report
          report_paths: report.xml

      - run: |
          # these files mess up the codecov report uploader, so remove them
          rm -f report.xml
          rm -f "build support/coverage.vi"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        env:
          CI: true
        with:
          # fail_ci_if_error: true # optional (default = false)
          # name: codecov-umbrella # optional
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          verbose: true # optional (default = false)
          flags: unittests
          files: "./codecov.json"
